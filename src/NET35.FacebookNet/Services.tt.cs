//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// XML document found at '\src\NET35.FacebookNet\..\FacebookApi.xml'

#region ReturnTypes for Pages

// WriteReturnTypes(Pages, Page)
namespace FacebookNet.Pages
{
    using System;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// Name: 'Page'
    /// </summary>
    [Serializable, XmlRoot("Page")]
    public class Page
    {
        /// <summary>
        /// Field: 'id' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "id")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Field: 'about' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "about")]
        [JsonProperty(PropertyName = "about")]
        public string About { get; set; }

        /// <summary>
        /// Field: 'attire' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "attire")]
        [JsonProperty(PropertyName = "attire")]
        public string Attire { get; set; }

        /// <summary>
        /// Field: 'band_members' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "band_members")]
        [JsonProperty(PropertyName = "band_members")]
        public string Band_members { get; set; }

        /// <summary>
        /// Field: 'best_page' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "best_page")]
        [JsonProperty(PropertyName = "best_page")]
        public Page Best_page { get; set; }

        /// <summary>
        /// Field: 'birthday' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "birthday")]
        [JsonProperty(PropertyName = "birthday")]
        public string Birthday { get; set; }

        /// <summary>
        /// Field: 'booking_agent' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "booking_agent")]
        [JsonProperty(PropertyName = "booking_agent")]
        public string Booking_agent { get; set; }

        /// <summary>
        /// Field: 'can_post' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "can_post")]
        [JsonProperty(PropertyName = "can_post")]
        public bool Can_post { get; set; }

        /// <summary>
        /// Field: 'category' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "category")]
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Field: 'category_list' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "category_list")]
        [JsonProperty(PropertyName = "category_list")]
        public string Category_list { get; set; }

        /// <summary>
        /// Field: 'checkins' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "checkins")]
        [JsonProperty(PropertyName = "checkins")]
        public int Checkins { get; set; }

        /// <summary>
        /// Field: 'company_overview' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "company_overview")]
        [JsonProperty(PropertyName = "company_overview")]
        public string Company_overview { get; set; }

        /// <summary>
        /// Field: 'cover' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "cover")]
        [JsonProperty(PropertyName = "cover")]
        public FacebookNet.Common.CoverPhoto Cover { get; set; }

        /// <summary>
        /// Field: 'context' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "context")]
        [JsonProperty(PropertyName = "context")]
        public object Context { get; set; }

        /// <summary>
        /// Field: 'current_location' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "current_location")]
        [JsonProperty(PropertyName = "current_location")]
        public string Current_location { get; set; }

        /// <summary>
        /// Field: 'description' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "description")]
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Field: 'directed_by' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "directed_by")]
        [JsonProperty(PropertyName = "directed_by")]
        public string Directed_by { get; set; }

        /// <summary>
        /// Field: 'founded' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "founded")]
        [JsonProperty(PropertyName = "founded")]
        public string Founded { get; set; }

        /// <summary>
        /// Field: 'general_info' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "general_info")]
        [JsonProperty(PropertyName = "general_info")]
        public string General_info { get; set; }

        /// <summary>
        /// Field: 'general_manager' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "general_manager")]
        [JsonProperty(PropertyName = "general_manager")]
        public string General_manager { get; set; }

        /// <summary>
        /// Field: 'global_brand_page_name' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "global_brand_page_name")]
        [JsonProperty(PropertyName = "global_brand_page_name")]
        public string Global_brand_page_name { get; set; }

        /// <summary>
        /// Field: 'global_brand_parent_page' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "global_brand_parent_page")]
        [JsonProperty(PropertyName = "global_brand_parent_page")]
        public Page Global_brand_parent_page { get; set; }

        /// <summary>
        /// Field: 'hometown' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "hometown")]
        [JsonProperty(PropertyName = "hometown")]
        public string Hometown { get; set; }

        /// <summary>
        /// Field: 'impressum' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "impressum")]
        [JsonProperty(PropertyName = "impressum")]
        public string Impressum { get; set; }

        /// <summary>
        /// Field: 'is_permanently_closed' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "is_permanently_closed")]
        [JsonProperty(PropertyName = "is_permanently_closed")]
        public bool Is_permanently_closed { get; set; }

        /// <summary>
        /// Field: 'is_published' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "is_published")]
        [JsonProperty(PropertyName = "is_published")]
        public bool Is_published { get; set; }

        /// <summary>
        /// Field: 'is_unclaimed' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "is_unclaimed")]
        [JsonProperty(PropertyName = "is_unclaimed")]
        public bool Is_unclaimed { get; set; }

        /// <summary>
        /// Field: 'is_verified' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "is_verified")]
        [JsonProperty(PropertyName = "is_verified")]
        public bool Is_verified { get; set; }

        /// <summary>
        /// Field: 'likes' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "likes")]
        [JsonProperty(PropertyName = "likes")]
        public int Likes { get; set; }

        /// <summary>
        /// Field: 'link' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "link")]
        [JsonProperty(PropertyName = "link")]
        public string Link { get; set; }

        /// <summary>
        /// Field: 'location' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "location")]
        [JsonProperty(PropertyName = "location")]
        public object Location { get; set; }

        /// <summary>
        /// Field: 'mission' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "mission")]
        [JsonProperty(PropertyName = "mission")]
        public string Mission { get; set; }

        /// <summary>
        /// Field: 'name' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "name")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Field: 'name_with_location_descriptor' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "name_with_location_descriptor")]
        [JsonProperty(PropertyName = "name_with_location_descriptor")]
        public string Name_with_location_descriptor { get; set; }

        /// <summary>
        /// Field: 'parking' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "parking")]
        [JsonProperty(PropertyName = "parking")]
        public object Parking { get; set; }

        /// <summary>
        /// Field: 'payment_options' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "payment_options")]
        [JsonProperty(PropertyName = "payment_options")]
        public object Payment_options { get; set; }

        /// <summary>
        /// Field: 'phone' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "phone")]
        [JsonProperty(PropertyName = "phone")]
        public string Phone { get; set; }

        /// <summary>
        /// Field: 'press_contact' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "press_contact")]
        [JsonProperty(PropertyName = "press_contact")]
        public string Press_contact { get; set; }

        /// <summary>
        /// Field: 'price_range' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "price_range")]
        [JsonProperty(PropertyName = "price_range")]
        public string Price_range { get; set; }

        /// <summary>
        /// Field: 'restaurant_services' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "restaurant_services")]
        [JsonProperty(PropertyName = "restaurant_services")]
        public object Restaurant_services { get; set; }

        /// <summary>
        /// Field: 'restaurant_specialties' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "restaurant_specialties")]
        [JsonProperty(PropertyName = "restaurant_specialties")]
        public object Restaurant_specialties { get; set; }

        /// <summary>
        /// Field: 'talking_about_count' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "talking_about_count")]
        [JsonProperty(PropertyName = "talking_about_count")]
        public int Talking_about_count { get; set; }

        /// <summary>
        /// Field: 'username' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "username")]
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Field: 'website' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "website")]
        [JsonProperty(PropertyName = "website")]
        public string Website { get; set; }

        /// <summary>
        /// Field: 'were_here_count' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "were_here_count")]
        [JsonProperty(PropertyName = "were_here_count")]
        public int Were_here_count { get; set; }

    }
}

// WriteReturnTypeFields(Pages)
namespace FacebookNet.Pages
{
    using System;
    using System.Collections.Generic;
    using System.Xml.Serialization;

    /// <summary>
    /// Field selectors for the 'Page' return types.
    /// </summary>
    public static class PagesFields {
    }
}

#endregion

#region ReturnTypes for Common

// WriteReturnTypes(Common, CoverPhoto)
namespace FacebookNet.Common
{
    using System;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// Name: 'CoverPhoto'
    /// </summary>
    [Serializable, XmlRoot("CoverPhoto")]
    public class CoverPhoto
    {
        /// <summary>
        /// Field: 'id' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "id")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Field: 'source' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "source")]
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Field: 'offset_y' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "offset_y")]
        [JsonProperty(PropertyName = "offset_y")]
        public int Offset_y { get; set; }

        /// <summary>
        /// Field: 'offset_x' (on-demand)
        /// </summary>
        [XmlElement(ElementName = "offset_x")]
        [JsonProperty(PropertyName = "offset_x")]
        public int Offset_x { get; set; }

    }
}

// WriteReturnTypeFields(Common)
namespace FacebookNet.Common
{
    using System;
    using System.Collections.Generic;
    using System.Xml.Serialization;

    /// <summary>
    /// Field selectors for the 'CoverPhoto' return types.
    /// </summary>
    public static class CommonFields {
    }
}

#endregion

#region API clients

// WriteApiGroup(Pages)
namespace FacebookNet.Pages
{
    using System;
    using System.Xml.Serialization;
    using FacebookNet.Internals;

    /// <summary>
    /// Name: 'Pages'
    /// </summary>
    public class PagesApi : BaseApi
    {
        [System.Diagnostics.DebuggerStepThrough]
        internal PagesApi(FacebookApi facebookApi)
            : base(facebookApi)
        {
        }
        
        /// <summary>
        /// returns a single 'page'
        /// </summary>
        public Pages.Page Get(
              string pageId 
            , FieldSelector<Pages.Page> fields = null
        )
        {
            const string urlFormat = "/v2.2/{PageId}";
            var url = FormatUrl(urlFormat, fields, "PageId", pageId);

            var context = new RequestContext();
            context.Method =  "GET";
            context.UrlPath = this.FacebookApi.Configuration.BaseApiUrl + url;

            if (!this.ExecuteQuery(context))
                this.HandleJsonErrorResponse(context);
            
            var result = this.HandleJsonResponse<Pages.Page>(context);
            return result;
        }
        
    }
}

// WriteApiGroup(Common)
namespace FacebookNet.Common
{
    using System;
    using System.Xml.Serialization;
    using FacebookNet.Internals;

    /// <summary>
    /// Name: 'Common'
    /// </summary>
    public class CommonApi : BaseApi
    {
        [System.Diagnostics.DebuggerStepThrough]
        internal CommonApi(FacebookApi facebookApi)
            : base(facebookApi)
        {
        }
        
    }
}

// WriteRootServices()
namespace FacebookNet
{
    using System;
    using System.Xml.Serialization;
    using FacebookNet.Internals;
    using FacebookNet.Pages;
    using FacebookNet.Common;

    /// <summary>
    /// The factory for  APIs.
    /// </summary>
    public partial class FacebookApi : BaseApi
    {
        /// <summary>
        /// The Pages API.
        /// </summary>
        public PagesApi Pages {
            [System.Diagnostics.DebuggerStepThrough]
            get { return new PagesApi(this); }
        }

        /// <summary>
        /// The Common API.
        /// </summary>
        public CommonApi Common {
            [System.Diagnostics.DebuggerStepThrough]
            get { return new CommonApi(this); }
        }

    }
}

#endregion


